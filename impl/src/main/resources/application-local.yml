server:
  port: 8080

spring:
  kafka:
    bootstrap-servers: "localhost:9092"
    consumer:
      auto-offset-reset: earliest

  mail:
    host: smtp.gmail.com
    port: 587
    username: "timullkaebay@gmail.com"
    password: "qxux ibsj uhsn jnio"
    test-connection: true
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    sender:
      email: no-reply@example.com
      text: no-reply

  liquibase:
    enabled: true
    drop-first: false
    default-schema: public
    liquibase-schema: public
    change-log: classpath:database-social.network-changelog.xml

  datasource:
    url: jdbc:postgresql://localhost:5432/social-network
    username: social-network
    password: social-network
    driverClassName: org.postgresql.Driver

access-token:
  private: "access-refresh-token-keys/access-token-private.key"
  public: "access-refresh-token-keys/access-token-public.key"
refresh-token:
  private: "access-refresh-token-keys/refresh-token-private.key"
  public: "access-refresh-token-keys/refresh-token-public.key"

cloud:
  cloudName: "dcxq7fexc"
  apiKey: "277947738682614"
  apiSecret:  "ZXCMrXel_tH2e7Sch_Mk0W_SCtA"

microservices:
  enableMsNotifications: true

notificationsApi:
  url: "localhost:8088"

management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  security:
    enabled: false
  prometheus:
    metrics:
      export:
        enabled: true

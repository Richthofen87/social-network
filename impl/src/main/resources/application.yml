server:
  port: 8080

spring:
  boot:
    admin:
      client:
        enabled: false
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      bootstrap-servers: "localhost:9092"
      client-id: "noteProducer"
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: "notesGroup"
      bootstrap-servers: "localhost:9092"
      client-id: "notificationService"
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: ru.skillbox.diplom.group46.social.network.api.dto.notifications, ru.skillbox.diplom.group46.social.network.api.dto.account
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL}
    password: ${PASSWORD_MAIL}
    test-connection: true
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    sender:
      email: no-reply@gmail.com
      text: no-reply

  datasource:
    url: jdbc:postgresql://db:5432/social-network
    username: social-network
    password: social-network
    driverClassName: org.postgresql.Driver

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false

  liquibase:
    enabled: true
    drop-first: false
    default-schema: social-network
    liquibase-schema: social-network
    change-log: classpath:database-social.network-changelog.xml

captcha:
  expiration: PT5M
  checkDelay: PT1M

access-token:
  private: ${ACCESS_TOKEN_PRIVATE_KEY_PATH}
  public: ${ACCESS_TOKEN_PUBLIC_KEY_PATH}
refresh-token:
  private: ${REFRESH_TOKEN_PRIVATE_KEY_PATH}
  public: ${REFRESH_TOKEN_PUBLIC_KEY_PATH}

cloud:
  cloudName: ${CLOUD_NAME}
  apiKey: ${API_KEY}
  apiSecret:  ${API_SECRET}


